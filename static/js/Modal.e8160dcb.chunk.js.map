{"version":3,"sources":["components/shared/Modal.js"],"names":["Modal","props","_this","Object","C_Users_Lenovo_B590_Desktop_abzTest_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Lenovo_B590_Desktop_abzTest_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Lenovo_B590_Desktop_abzTest_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","backdropRef","createRef","handleBackdropClick","e","current","target","onHandleModal","handleKeyPress","code","_props$message","message","title","body","button","state","window","addEventListener","removeEventListener","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","ref","onClick","type","Component"],"mappings":"kMAGqBA,cAGnB,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAHRQ,YAAcC,sBAEKR,EAoBnBS,oBAAsB,SAAAC,GAAK,IACjBC,EAAYX,EAAKO,YAAjBI,QACJA,GAAWD,EAAEE,SAAWD,IAI5BE,EAD0Bb,EAAKD,MAAvBc,kBAzBSb,EA6BnBc,eAAiB,SAAAJ,GACA,WAAXA,EAAEK,OAENF,EAD0Bb,EAAKD,MAAvBc,kBA/BS,IAAAG,EAGejB,EAAMkB,QAA9BC,EAHSF,EAGTE,MAAOC,EAHEH,EAGFG,KAAMC,EAHJJ,EAGII,OAHJ,OAKjBpB,EAAKqB,MAAQ,CACXH,QACAC,OACAC,UARepB,mFAajBsB,OAAOC,iBAAiB,UAAWpB,KAAKW,+DAIxCQ,OAAOE,oBAAoB,UAAWrB,KAAKW,iDAkBpC,IACCD,EAAkBV,KAAKJ,MAAvBc,cADDY,EAEyBtB,KAAKkB,MAA7BH,EAFDO,EAECP,MAAOC,EAFRM,EAEQN,KAAMC,EAFdK,EAEcL,OACrB,OACEM,EAAAC,EAAAC,cAAA,OACEC,UAAU,2BACVC,IAAK3B,KAAKI,YACVwB,QAAS5B,KAAKM,qBAEdiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBX,GAC9BQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,kBACVE,QAAS,kBAAMlB,MAHjB,MAQFa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeV,IAE9BO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UACEI,KAAK,SACLH,UAAU,uBACVE,QAAS,kBAAMlB,MAEdO,aApEoBa","file":"static/js/Modal.e8160dcb.chunk.js","sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Modal extends Component {\n  backdropRef = createRef();\n\n  constructor(props) {\n    super(props);\n\n    const { title, body, button } = props.message;\n\n    this.state = {\n      title,\n      body,\n      button,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyPress);\n  }\n\n  handleBackdropClick = e => {\n    const { current } = this.backdropRef;\n    if (current && e.target !== current) {\n      return;\n    }\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  handleKeyPress = e => {\n    if (e.code !== 'Escape') return;\n    const { onHandleModal } = this.props;\n    onHandleModal();\n  };\n\n  render() {\n    const { onHandleModal } = this.props;\n    const { title, body, button } = this.state;\n    return (\n      <div\n        className=\"backdrop backdrop__modal\"\n        ref={this.backdropRef}\n        onClick={this.handleBackdropClick}\n      >\n        <div className=\"modal\">\n          <div className=\"modal__inner\">\n            <h2 className=\"modal__title\">{title}</h2>\n            <div className=\"spacer\" />\n            <button\n              type=\"button\"\n              className=\"button modal__x\"\n              onClick={() => onHandleModal()}\n            >\n              x\n            </button>\n          </div>\n          <div className=\"modal__inner\">\n            <p className=\"modal__body\">{body}</p>\n          </div>\n          <div className=\"modal__inner\">\n            <button\n              type=\"button\"\n              className=\"button modal__button\"\n              onClick={() => onHandleModal()}\n            >\n              {button}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onHandleModal: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    button: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"],"sourceRoot":""}